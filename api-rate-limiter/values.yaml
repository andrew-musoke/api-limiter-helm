## API RATE LIMITER ##
# Description:
#  Will install a redis cluster on kubernetes using helm. Below are custom values that override the defaults
#  found at https://github.com/bitnami/charts/tree/master/bitnami/redis.
#  If using a secret, make sure the secret is created before hand to avoid issues.
#######
apiRateLimiter:
  enabled: true
  replicaCount: 1
  namespace: api
  env: []
  # - name: ENV 
  #   value: var

  image:
    repository: amusoke/irembo-apiRateLimiter
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "api-rate-limiter"

  podAnnotations: {}

  labels: 
    app: apiRateLimiter

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

## PROTECTED API ##
# Description:
#  Will install a redis cluster on kubernetes using helm. Below are custom values that override the defaults
#  found at https://github.com/bitnami/charts/tree/master/bitnami/redis.
#  If using a secret, make sure the secret is created before hand to avoid issues.
#######
protectedApi:
  enabled: true
  replicaCount: 1
  namespace: api
  image:
    repository: eexit/mirror-http-server
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "protected-api"

  podAnnotations: {}

  labels: 
    app: protectedApi

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80
    

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

## REDIS DATABASE ##
# Description:
#  Will install a redis cluster on kubernetes using helm. Below are custom values that override the defaults
#  found at https://github.com/bitnami/charts/tree/master/bitnami/redis.
#  If using a secret, make sure the secret is created before hand to avoid issues.
#######
redis: 
  enabled: true

  ## Cluster settings
  ##
  image:
    ## Bitnami Redis image tag
    ## ref: https://github.com/bitnami/bitnami-docker-redis#supported-tags-and-respective-dockerfile-links
    ##
    tag: 6.0.5-debian-10-r2
    
  cluster:
    enabled: true
    slaveCount: 3

  sentinel:
    enabled: false

  master:
    ## Enable persistence using Persistent Volume Claims
    persistence:
      enabled: true
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessModes:
        - ReadWriteOnce
      size: 100Gi # TODO: increase resources

  slave:
    ## Redis Slave pod/node affinity/anti-affinity
    ##
    affinity: {}
    ## Enable persistence using Persistent Volume Claims
    persistence:
      enabled: true
      ## redis data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      # storageClass: "-"
      accessModes:
        - ReadWriteOnce
      size: 100Gi # TODO: increase resources

  ## Redis password settings
  ##
  usePassword: true
  ## Redis password (both master and slave)
  ## Defaults to a random 10-character alphanumeric string if not set and usePassword is true
  ## ref: https://github.com/bitnami/bitnami-docker-redis#setting-the-server-password-on-first-run
  ##
  # password: ''
  ## Use existing secret (ignores previous password)
  # existingSecret:
  ## Password key to be retrieved from Redis secret
  ##
  # existingSecretPasswordKey: # TODO: create secret


  ## Prometheus Exporter / Metrics settings
  ##
  metrics:
    enabled: true
    image:
      repository: bitnami/redis-exporter
      tag: 1.6.1-debian-10-r28
    ## Metrics exporter pod Annotation and Labels
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9121"

    # Enable this if you're using https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: true
      ## Specify a namespace if needed
      # namespace: monitoring
      ## [Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-operator-1)
      ## [Kube Prometheus Selector Label](https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#exporters)
      selector:
        prometheus: kube-prometheus
